{"ast":null,"code":"const DEFAULT_STATE = {\n  memes: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"ADD_MEME\") {\n    return {\n      ...state,\n      memes: [...state.memes, {\n        ...action.meme\n      }]\n    };\n  }\n  if (action.type === \"REMOVE_MEME\") {\n    return {\n      ...state,\n      memes: state.memes.filter(meme => meme.id !== action.id)\n    };\n  }\n  return state;\n}\nexport default rootReducer;","map":{"version":3,"names":["DEFAULT_STATE","memes","rootReducer","state","arguments","length","undefined","action","type","meme","filter","id"],"sources":["/Users/greenruck/Downloads/react-redux/meme-generator/src/rootReducer.js"],"sourcesContent":["const DEFAULT_STATE = {\n  memes: []\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  if (action.type === \"ADD_MEME\") {\n    return {\n      ...state,\n      memes: [\n        ...state.memes, { ...action.meme }\n      ]\n    };\n  }\n  if (action.type === \"REMOVE_MEME\") {\n    return {\n      ...state,\n      memes: state.memes.filter(meme => meme.id !== action.id)\n    };\n  }\n  return state;\n}\n\nexport default rootReducer;\n\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACpBC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,WAAWA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,aAAa;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,IAAIC,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACL,GAAGL,KAAK;MACRF,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KAAK,EAAE;QAAE,GAAGM,MAAM,CAACE;MAAK,CAAC;IAEtC,CAAC;EACH;EACA,IAAIF,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACjC,OAAO;MACL,GAAGL,KAAK;MACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACS,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKJ,MAAM,CAACI,EAAE;IACzD,CAAC;EACH;EACA,OAAOR,KAAK;AACd;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}